function TinyTabs(t,e={}){const r=document.querySelector(t);let a={tabList:r.querySelector("ul"),tabTrigger:"[data-tab-trigger]",tabContent:"[data-tab-content]",tabTriggerActiveClass:"is-active"};const i=Object.assign({},a,e),o=Array.from(r.querySelectorAll(i.tabTrigger)),b=Array.from(r.querySelectorAll(i.tabContent));b[0].removeAttribute("hidden"),b[0].removeAttribute("aria-hidden"),i.tabList.setAttribute("aria-role","tablist"),b.forEach(t=>{t.setAttribute("aria-role","tabpanel"),t.setAttribute("aria-hidden","")}),o.forEach(t=>{t.setAttribute("role","tab"),t.parentNode.setAttribute("aria-role","presentation")}),o.forEach(t=>{t.addEventListener("click",e=>{e.preventDefault();let a=t.getAttribute("href"),s=r.querySelector(a);o.forEach(t=>{t.classList.remove(i.tabTriggerActiveClass)}),b.forEach(t=>{t.setAttribute("hidden",""),t.setAttribute("aria-hidden","true")}),t.classList.add(i.tabTriggerActiveClass),s.removeAttribute("hidden"),s.removeAttribute("aria-hidden")})});const s=document.createElement("div");s.id="end-of-tab",s.setAttribute("role","separator"),s.setAttribute("aria-labelledby","end-of-tab"),s.setAttribute("aria-label","End of"),r.appendChild(s)}